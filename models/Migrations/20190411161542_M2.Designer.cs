// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using models.Data;

namespace models.Migrations
{
    [DbContext(typeof(AccountingForEnergyContext))]
    [Migration("20190411161542_M2")]
    partial class M2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("models.Data.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("Number_of_floors");

                    b.Property<string>("Post");

                    b.HasKey("Id");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("models.Data.Electric", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<double>("Power");

                    b.Property<double>("UsingOfDay");

                    b.HasKey("Id");

                    b.ToTable("Electric");
                });

            modelBuilder.Entity("models.Data.ElectricsByOrganization", b =>
                {
                    b.Property<int>("OrganizationId");

                    b.Property<int>("ElectricId");

                    b.HasKey("OrganizationId", "ElectricId");

                    b.HasIndex("ElectricId");

                    b.ToTable("ElectricsByOrganization");
                });

            modelBuilder.Entity("models.Data.Lighting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ElectricId");

                    b.HasKey("Id");

                    b.HasIndex("ElectricId");

                    b.ToTable("Lighting");
                });

            modelBuilder.Entity("models.Data.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Post");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("models.Data.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Area");

                    b.Property<int>("BuildingId");

                    b.Property<int>("Floor");

                    b.Property<int>("Number");

                    b.Property<int>("Type_of_roomId");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("Type_of_roomId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("models.Data.Room_rental", b =>
                {
                    b.Property<int>("RoomId");

                    b.Property<int>("OrganizationId");

                    b.Property<DateTime>("InputDate");

                    b.Property<DateTime>("OutputDate");

                    b.HasKey("RoomId", "OrganizationId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Room_rental");
                });

            modelBuilder.Entity("models.Data.Type_of_room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Type_of_rooms");
                });

            modelBuilder.Entity("models.Data.ElectricsByOrganization", b =>
                {
                    b.HasOne("models.Data.Electric", "Electric")
                        .WithMany("ElectricsByOrganization")
                        .HasForeignKey("ElectricId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("models.Data.Organization", "Organization")
                        .WithMany("ElectricsByOrganization")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("models.Data.Lighting", b =>
                {
                    b.HasOne("models.Data.Electric", "Electric")
                        .WithMany("Lightings")
                        .HasForeignKey("ElectricId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("models.Data.Room", b =>
                {
                    b.HasOne("models.Data.Building", "Building")
                        .WithMany("rooms")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("models.Data.Type_of_room", "TypeOfRoom")
                        .WithMany("rooms")
                        .HasForeignKey("Type_of_roomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("models.Data.Room_rental", b =>
                {
                    b.HasOne("models.Data.Organization", "Organization")
                        .WithMany("Room_rentals")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("models.Data.Room", "Room")
                        .WithMany("Room_rentals")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
